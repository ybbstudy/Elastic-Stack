/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.apache.tools.ant.types.Path

esplugin {
  description 'An easy, safe and fast scripting language for Elasticsearch'
  classname 'org.elasticsearch.painless.PainlessPlugin'
}

dependencies {
  compile 'org.antlr:antlr4-runtime:4.5.1-1'
  compile 'org.ow2.asm:asm-debug-all:5.1'
}

dependencyLicenses {
  mapping from: /asm-.*/, to: 'asm'
}

// regeneration logic, comes in via ant right now
// don't port it to gradle, it works fine.

configurations {
  regenerate
}

dependencies {
  regenerate 'org.antlr:antlr4:4.5.1-1'
}

ant.references['regenerate.classpath'] = new Path(ant.project, configurations.regenerate.asPath)
ant.importBuild 'ant.xml'

integTestCluster {
  setting 'script.max_compilations_per_minute', '1000'
}

/* Build Javadoc for the Java classes in Painless's public API that are in the
 * Painless plugin */
task apiJavadoc(type: Javadoc) {
  source = sourceSets.main.allJava
  include '**/org/elasticsearch/painless/api/'
  destinationDir = new File(docsDir, 'apiJavadoc')
}
task apiJavadocJar(type: Jar) {
  classifier = 'apiJavadoc'
  from apiJavadoc
}
assemble.dependsOn apiJavadocJar

// Reference documentation for Painless's public API.
task generatePainlessApi(type: JavaExec) {
  main = 'org.elasticsearch.painless.PainlessDocGenerator'
  classpath = sourceSets.test.runtimeClasspath
  args file('../../docs/reference/painless-api-reference')
}
